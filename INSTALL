INSTALLATION GUIDE FOR PYFLOSIC.
CONTENTS:
	0. REQUIREMENTS
	1. INSTALLING PYSCF
	2. INSTALLING PYFLOSIC

SCOPE:
	As of yet, this installation guide will only guide you through the installation for Linux (debian / ubuntu / openSUSE). Support for Mac OS and Windows coming soon. 

XXXXXXXXXXXXXXXXXXXXXXXXXX
X  0. REQUIREMENTS       X
XXXXXXXXXXXXXXXXXXXXXXXXXX

- Python 2.7
- ASE 3.13.0
- NumPy / SciPy
- Matplotlib (optional)

XXXXXXXXXXXXXXXXXXXXXXXXXX
X  1. INSTALLING PYSCF   X
XXXXXXXXXXXXXXXXXXXXXXXXXX

---- DEBIAN / UBUNTU ----

# Based on http://sunqm.github.io/pyscf/install.html#installation-without-network with slight modifications. 

# First, we need to download the external libraries PySCF needs and manually install them.
# These libraries are libcint, libxc and xcfun.
# Make sure to change /path/to/your/library/folder to the actual path!
# Simply change /path/to/your/library/folder to an arbitrary path you want your PySCF installation to be in (e.g. /home/user/pyscf/libs)

# LIBCINT: Download and build the library.

git clone https://github.com/sunqm/libcint.git
cd libcint
git checkout origin/cint3
cd .. && tar czf libcint.tar.gz libcint
tar xvzf libcint.tar.gz
cd libcint
mkdir build && cd build
cmake -DWITH_F12=1 -DWITH_RANGE_COULOMB=1 -DWITH_COULOMB_ERF=1 \
    -DCMAKE_INSTALL_PREFIX:PATH=/path/to/your/library/folder -DCMAKE_INSTALL_LIBDIR:PATH=lib ..
make && make install

# XCFUN: Download and build the library.
# We do not need XCFUN and in pyscf LIBXC is standard; therefore you can also skip this part by you need to adjust the CMakelist.txt file of pyscf. 

git clone https://github.com/sunqm/xcfun.git 
cd xcfun
git checkout origin/stable-1.x # If you are experiencing trouble with loading stable-1.x this way, clone https://github.com/dftlibs/xcfun.git/tree/stable-1.x instead. In this case, no further checkout is needed. 
cd .. && tar czf xcfun.tar.gz xcfun
tar xvzf xcfun.tar.gz
cd xcfun
mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=1 -DXC_MAX_ORDER=3 -DXCFUN_ENABLE_TESTS=0 \
    -DCMAKE_INSTALL_PREFIX:PATH=/path/to/your/library/folder  -DCMAKE_INSTALL_LIBDIR:PATH=lib ..
make && make install

# LIBXC: Download tar.gz from "http://www.tddft.org/programs/libxc/download/previous/" the package "libxc-4.0.4.tar.gz". 
#	 Note: Somehow the gilab versions missing the configure file. 
#              If you checkout a gitlab version you need to create your configure file first using: autoreconf -i . 
#	       Therefore you might need to install autoconf, e.g sudo apt-get install autoconf. 
# LIBXC: Build the library.

tar xvzf libxc-4.0.4.tar.gz
cd libxc-4.0.4
#mkdir build && cd build
#../configure --prefix=/path/to/your/library/folder  --libdir=/path/to/your/library/folder/lib --enable-shared --disable-fortran LIBS=-lm
configure --prefix=/path/to/your/library/folder  --libdir=/path/to/your/library/folder/lib --enable-shared --disable-fortran LIBS=-lm
make && make install

# PYSCF: Download and install.

git clone https://github.com/sunqm/pyscf
cd pyscf/pyscf/lib
# If you want to disable XCFUN lib then use the follwing lines. 
# vi CMakeLists.txt
# Search for XCFUN and disable the XCFUN lib option. 
# option(ENABLE_XCFUN "Using xcfun for XC functional library" OFF)
mkdir build && cd build
cmake -DBUILD_LIBCINT=0 -DBUILD_LIBXC=0 -DBUILD_XCFUN=0 -DCMAKE_INSTALL_PREFIX:PATH=/path/to/your/library/folder/ ..
make

---- OPENSUSE ----

# Install all preliminaries using e.g. YaST -> Softwarmanager (gcc,gcc++,python-matplotlib,git,patch,h5py,cmake).

# PYSCF: Download and Install. 

git clone https://github.com/sunqm/pyscf.git
cd pyscf/lib
  mkdir build; cd build
  cmake ..
  make

# Load additional Python packages.
# Install problems concerning version of python-numpy and python-ase: install them locally and give it in job script to the PYTHONPATH

git clone https://github.com/numpy/numpy.git numpy
git clone -b 3.16.2 https://gitlab.com/ase/ase.git


---- TAURUS ----

# (additional information, regular workflow  as with ubuntu / debian)
# To install PySCF on Taurus, please use the gcc compiler. If you want to keep the Intel compiler loaded, rest the environment variable with e.g.

module purge * 
module load GCC 
module load  modenv/both modenv/classic python/3.4.3-scipy

# Timeouts during the compilation are possible. Please us an allocated node.

salloc -n 4  --time=4:00:00

# Remember to use the -j CORES option for make commands.

# If the compilation of PySCF failed due to the xcfun library use this:

cd /path/to/your/pyscf_folder/pyscf/pyscf/lib
vi CMakeLists.txt
option(ENABLE_XCFUN "Using xcfun for XC functional library" OFF)

# then clean your build folder, use cmake and then make again.

XXXXXXXXXXXXXXXXXXXXXXXXXX
X 2. INSTALLING PYFLOSIC X
XXXXXXXXXXXXXXXXXXXXXXXXXX

1. Copy the content of pyflosic/src to an arbitrary directory dir.
2. Update the PYTHONPATH variable on your system with export PYTHONPATH=/path/to
/dir/:$PYTHONPATH.
